# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set commit short SHA as an environment variable
        run: echo "COMMIT_SHA_SHORT=$(echo ${GITHUB_SHA::7})" >> $GITHUB_ENV

      # Inject the commit SHA as a variable in the index.html file
      - name: Inject short SHA into index.html
        run: sed -i "s/{{short_sha}}/${GITHUB_SHA::7}/g" index.html

      # Create a folder with the commit SHA as the name
      - name: Create versioned folder
        run: mkdir -p "version/${GITHUB_SHA::7}"

      # Copy the distribution to the versioned folder
      - name: Copy the distribution to the versioned folder.
        run: rsync -av --progress --exclude='version/' ./ "version/${GITHUB_SHA::7}/"

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        env:
          COMMIT_SHA_SHORT: ${{ env.COMMIT_SHA_SHORT }}
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: "version/${COMMIT_SHA_SHORT}"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
